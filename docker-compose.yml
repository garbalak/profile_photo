version: "3"
   
services:
  db:
    image: mariadb:10.6
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - private
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=ihre_pflege0
      - MYSQL_USER=root
      - MYSQL_PASSWORD=root
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "--silent" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: on-failure

  api:
    build: 
        dockerfile: Django.Dockerfile
        context: .
    command: bash -c "python manage.py migrate; gunicorn server.wsgi:application --bind 0.0.0.0:8000 --reload"

    volumes:
      - ./server:/code
    networks:
      - traefik_webgateway
      - private
    environment:
      - MYSQL_NAME=ihre_pflege0
      - MYSQL_USER=root
      - MYSQL_PASSWORD=root
      - PORT=3306
    depends_on:
      - db
    restart: on-failure
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`${API_HOST}`)"
      - "traefik.http.routers.django.entrypoints=web"
      - "traefik.http.services.django.loadbalancer.server.port=8000"
      - "traefik.docker.network=traefik_webgateway"

  frontend:
    build:
      dockerfile: Frontend.Dockerfile
      context: .
    networks:
      - traefik_webgateway
      - private
    depends_on:
      - api
    volumes:
      - ./web/dist/:/usr/share/nginx/html/
    restart: on-failure
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${APP_HOST}`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
      - "traefik.docker.network=traefik_webgateway"

#  staticfiles:
#    build:
#      dockerfile: Staticfiles.Dockerfile
#      context: .
#    networks:
#      - traefik_webgateway
#      - private
#    depends_on:
#      - api
#    restart: on-failure
#    labels:
#        - "traefik.enable=true"
#        - "traefik.http.routers.staticfiles.rule=Host(`${STATICFILES_HOST}`)"
#        - "traefik.http.routers.staticfiles.entrypoints=web"
#        - "traefik.http.services.staticfiles.loadbalancer.server.port=80"
#        - "traefik.docker.network=traefik_webgateway"
  
  # rabbitmq:
  #   image: rabbitmq:3.8-management
  #   hostname: rabbitmq
  #   networks:
  #     - private
  #   restart: on-failure

  # celeryworker:
  #   build: 
  #       dockerfile: Celery.Dockerfile
  #       context: .
  #   command: celery -A myproject worker --loglevel=info --max-tasks-per-child=1
  #   volumes:
  #     - ./api:/code
  #   networks:
  #     - private
  #   environment:
  #     - CELERY_BROKER=amqp://guest:guest@rabbitmq:5672
  #     - DJANGO_SETTINGS_MODULE=myproject.settings
  #   restart: on-failure
  #   depends_on:
  #     - rabbitmq

  # celerybeat:
  #   build: 
  #       dockerfile: Celery.Dockerfile
  #       context: .
  #   command: celery -A myproject beat -l info
  #   volumes:
  #     - ./api:/code
  #   networks:
  #     - private
  #   environment:
  #     - CELERY_BROKER=amqp://guest:guest@rabbitmq:5672
  #     - DJANGO_SETTINGS_MODULE=myproject.settings
  #   restart: on-failure
  #   depends_on:
  #     - rabbitmq

networks:
  private:
  traefik_webgateway:
    external: true

volumes:
  mysql_data: